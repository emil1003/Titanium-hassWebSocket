--- Creates a request with data for sending to Home Assistant instance
--- @class WebSocketRequest : MRequestable
--- @field AUTH string
--- @field SUBSCRIBE_EVENTS string
--- @field SUBSCRIBE_TRIGGER string
--- @field UNSUBSCRIBE_EVENTS string
--- @field FIRE_EVENT string
--- @field CALL_SERVICE string
--- @field GET_STATES string
--- @field GET_CONFIG string
--- @field GET_PANELS string
--- @field PING string
--- @field VALIDATE_CONFIG string
WebSocketRequest = {}
class "WebSocketRequest" mixin "MRequestable" {
	static = {
		AUTH = "auth",
		SUBSCRIBE_EVENTS = "subscribe_events",
		SUBSCRIBE_TRIGGER = "subscribe_trigger",
		UNSUBSCRIBE_EVENTS = "unsubscribe_events",
		FIRE_EVENT = "fire_event",
		CALL_SERVICE = "call_service",
		GET_STATES = "get_states",
		GET_CONFIG = "get_config",
		GET_PANELS = "get_panels",
		PING = "ping",
		VALIDATE_CONFIG = "validate_config",

		--- @deprecated Use MRequestable.CALLBACK_RESULT instead
		CALLBACK_RESULT = "callback_result"
	}
}

--- Resolve constructor arguments
--- @vararg any
function WebSocketRequest:__init__(...)
	self:resolve(...)
end

configureConstructor({
	orderedArguments = {"type", "message"},
	argumentTypes = {
		type = "string",
		message = "table"
	}
})
